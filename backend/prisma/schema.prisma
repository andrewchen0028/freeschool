generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Link {
  id         Int  @id @default(autoincrement())
  sourceNode Node @relation("sourceNodeIdToNode", fields: [source], references: [id])
  targetNode Node @relation("targetNodeIdToNode", fields: [target], references: [id])
  source     Int
  target     Int
  // nodes_links_sourceNodeIdTonodes Node   @relation("links_sourceNodeIdTonodes", fields: [sourceNodeId], references: [nodeId], onDelete: NoAction, onUpdate: NoAction)
  // nodes_links_targetNodeIdTonodes Node   @relation("links_targetNodeIdTonodes", fields: [targetNodeId], references: [nodeId], onDelete: NoAction, onUpdate: NoAction)

  @@map("links")
}

// TODO-medium: Require Node title to be unique
model Node {
  id                 Int        @id @default(autoincrement())
  score              Int        @default(0)
  title              String
  sourceNodeIdToNode Link[]     @relation("sourceNodeIdToNode")
  targetNodeIdToNode Link[]     @relation("targetNodeIdToNode")
  // links_links_sourceNodeIdTonodes Link[]     @relation("links_sourceNodeIdTonodes")
  // links_links_targetNodeIdTonodes Link[]     @relation("links_targetNodeIdTonodes")
  resources          Resource[]

  @@map("nodes")
}

model Resource {
  id     Int    @id @default(autoincrement())
  url    String @unique @db.VarChar(255)
  node   Node   @relation(fields: [nodeId], references: [id])
  nodeId Int

  @@map("resources")
}
